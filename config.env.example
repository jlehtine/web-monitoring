# Configuration example
#
# Copy this to config.env and edit to suit your monitoring requirements.

#
# Site configuration
#

# Identifiers of sites to be monitored
# (must be valid as environment variable names)
sites='example_org example_com'

# Name and URL for example.org monitoring
name_example_org='Site example.org'
url_example_org='https://example.org/'

# Name and URL for example.com monitoring
name_example_com='Second example, example.com'
url_example_com='https://example.com/'



#
# Alarm configuration
#

# To override following settings per site, set `<setting>_<siteid>`.

# Alarm recipients, space separated
alarm_email='user1@example.org user2@example.org'


#
# General monitoring configuration
#

# Directory used for storing persistent state
# (may be absolute or relative to the base directory)
state_dir='state'

# Directory used for logs
# (may be absolute or relative to the base directory)
log_dir='log'

# Base directory for temporary files dir, use /tmp if /run/shm not available
tmp_dir_base='/run/shm'

# To override following settings per site, set `<setting>_<siteid>`.

# Use a random startup delay between 0 and $rnd_delay seconds.
# The idea is to avoid always hitting the same second at the start of a minute.
# This also spreads out the requests for different sites.
rnd_delay=15

# Web monitoring command to be used.  See `tools.sh` for the arguments and
# variables available to the command.
#
# The standard alternatives provided are:  
# - `monitor_wget`: monitor with `wget`  
# - `monitor_curl`: monitor with `curl`
#
# Custom tools may be provided in `custom-tools.sh` which is sourced
# automatically, if present.
tool_monitor='monitor_wget'

# How many attempts to do (1 = single-shot, 2-N = retry on error)
tries=1

# How long to wait in seconds until timeout
timeout=15

# Command used to send email, expected to be sendmail compatible
tool_email='sendmail'

# Email sender address, or empty for default
from_email=
